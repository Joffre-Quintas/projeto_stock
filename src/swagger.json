{
  "openapi": "3.0.0",
  "info": {
    "tittle": "API Estoque",
    "description": "Esta API visa gerenciar e ter visibilidade do estoque de cada unidade de forma Global.",
    "version": "1.0.0"
  },
  "paths": {
    "/employee": {
      "get": {
        "summary": "Listar todos os funcionários.",
        "description": "Essa rota retorna um array de funcionários.",
        "tags": ["Employee"],
        "responses": {
          "200": {
            "description": "Lista de funcionários.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Employee"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      },
      "post": {
        "summary": "Cria novo funcionário.",
        "description": "Essa rota cria um novo usuário e retorna uma mensagem.",
        "tags": ["Employee"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Employee"
              },
              "examples": {
                "Estoquista": {
                  "value": {
                    "fullName": "Kaio Lima",
                    "hireDate": "2023-11-02T15:00:00Z",
                    "office": "Estoquista",
                    "cpf": "12345678912"
                  }
                },
                "Vendedor": {
                  "value": {
                    "fullName": "Alvaro Lins",
                    "hireDate": "2023-11-02T15:00:00Z",
                    "office": "Vendedor"
                  }
                },
                "Gerente": {
                  "value": {
                    "fullName": "Victoria Lima",
                    "hireDate": "2023-11-02T15:00:00Z",
                    "office": "Gerente"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Criado com sucesso!"
          },
          "400": {
            "description": "Funcionário já cadastrado"
          }
        }
      }
    },
    "/employee/id": {
      "delete": {
        "summary": "Deletar um funcionário pelo ID.",
        "description": "Essa rota retorna uma mensagem de sucesso ou erro.",
        "tags": ["Employee"],
        "parameters": [
          {
            "id": "id",
            "in": "path",
            "description": "ID do funcionário para busca.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Deletado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Informe um id válido.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Funcionario não encontrado!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Atualiza um funcionário pelo ID.",
        "description": "Essa rota retorna uma mensagem de sucesso ou erro.",
        "tags": ["Employee"],
        "parameters": [
          {
            "id": "id",
            "in": "path",
            "description": "ID do funcionário para busca.",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Employee"
              },
              "examples": {
                "teste1": {
                  "value": {
                    "fullName": "Fulaninho",
                    "hireDate": "2023-11-28T15:31:30Z",
                    "office": "Tester",
                    "cpf": "98765432198"
                  }
                },
                "teste2": {
                  "value": {
                    "fullName": "Sicraninho",
                    "hireDate": "2023-11-28T15:31:30Z",
                    "office": "outro tester",
                    "cpf": "98765432197"
                  }
                },
                "teste3": {
                  "value": {
                    "fullName": "Sivirina",
                    "hireDate": "2023-11-28T15:31:30Z",
                    "office": "QA",
                    "cpf": "98765432196"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Atualizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Informe um id válido.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/product": {
      "get": {
        "summary": "Listar todos os produtos",
        "description": "Esta rota retorna uma lista de todos os produtos disponíveis em estoque.",
        "tags": ["Product"],
        "responses": {
          "200": {
            "description": "Lista de produtos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      },
      "post": {
        "summary": "Criar um novo produto",
        "description": "Esta rota permite criar um novo produto no sistema.",
        "tags": ["Product"],
        "requestBody": {
          "description": "Dados do novo produto",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              },
              "examples": {
                "Geladeira": {
                  "value": {
                    "name": "Geladeira",
                    "price": 799
                  }
                },
                "TV LED": {
                  "value": {
                    "name": "TV LED",
                    "price": 499
                  }
                },
                "Maquina de Lavar": {
                  "value": {
                    "name": "Máquina de Lavar",
                    "price": 699
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Produto criado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "description": "Requisição inválida. Verifique os dados enviados. Esse produto já foi cadastrado."
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      }
    },
    "/product/id": {
      "put": {
        "summary": "Atualiza um produto pelo ID.",
        "description": "Esta rota permite atualizar um produto existente pelo seu ID.",
        "tags": ["Product"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do produto a ser atualizado.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Dados do produto atualizado",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              },
              "examples": {
                "Guarda Roupa": {
                  "value": {
                    "name": "Guarda Roupa",
                    "price": 1499.99
                  }
                },
                "Ventilador": {
                  "value": {
                    "name": "Ventilador",
                    "price": 279.99
                  }
                },
                "Monitor de 29°": {
                  "value": {
                    "name": "Monitor de 29°",
                    "price": 899.99
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Produto atualizado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Erro de validação ou atualização inválida.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "ID do produto não encontrado.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Exclui um produto pelo ID.",
        "description": "Esta rota permite excluir um produto existente pelo seu ID.",
        "tags": ["Product"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do produto a ser excluído.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Produto excluído com sucesso."
          },
          "404": {
            "description": "ID do produto não encontrado.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Employee": {
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string"
          },
          "hireDate": {
            "type": "string",
            "format": "date-time"
          },
          "office": {
            "type": "string"
          },
          "cpf": {
            "type": "string"
          }
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "O nome do produto."
          },
          "price": {
            "type": "number",
            "description": "O preço unitário do produto."
          }
        }
      }
    }
  }
}
